all(what[7:10] < .01)
all(what[8:11] < .01)
for (i in length(time_l) - 2 - 1) {
start <- i
end <- i + 2
if(all(what[start:end] > .01) == FALSE){
print(i)
print(time_l[i])
break
}
}
all(what[1:3] > .01)
all(what[2:4] > .01)
all(what[3:5] > .01)
all(what[4:6] > .01)
all(what[4:7] > .01)
all(what[5:8] > .01)
for (i in length(time_l) - 2 - 1) {
start <- i
end <- i + 2
if(all(what[start:end] > .05) == FALSE){
print(i)
print(time_l[i])
break
}
}
length(time_l) -3
for (i in length(time_l) - 2 - 1) {
start <- i
end <- i + 2
if(all(what[start:end] > .05) == FALSE){
hey <- i
print("hey")
print(time_l[i])
}
}
for (i in length(time_l) - 2 - 1) {
start <- i
end <- i + 2
if(all(what[start:end] > .05) == FALSE){
hey <- i
print("hey")
print(time_l[i])
break
}
}
for (i in length(time_l) - 2 - 1) {
start <- i
end <- i + 2
if(all(what[start:end] > .05) == FALSE){
hey <- i + 2
print("hey")
print(time_l[i + 2])
break
}
}
plot(time_l, meas_l)
#plot(time_l[-1], diff(meas_l))
what <- diff(meas_l)
plot(time_l[-length(time_l)], what)
# why isnt this working?
for (i in (length(time_l) - 2 - 1)) {
start <- i
end <- i + 2
if(all(what[start:end] > .05) == FALSE){
hey <- i + 2
print("hey")
print(time_l[i + 2])
break
}
}
all(what[1:3] > .05)
all(what[1:4] > .05)
all(what[1:5] > .05)
for (i in (length(time_l) - 2 - 1)) {
if(all(what[1:i] > .05) == FALSE){
print(i)
break
}
}
j <- 1
for (i in (length(time_l) - 2 - 1)) {
j <- j + 1
if(all(what[1:i] > .05) == FALSE){
print(j)
break
}
}
j <- 1
for (i in (length(time_l) - 2 - 1)) {
j <- j + 1
if(all(what[1:i] > .05) == FALSE){
print(j)
break
}
}
for (i in (length(time_l) - 2 - 1)) {
j <- j + 1
if(all(what[1:i] > .05) == FALSE){
print(i)
break
}
}
for (i in (length(time_l) - 2 - 1)) {
j <- j + 1
if(all(what[1:i] > .05) == FALSE){
print(j)
break
}
}
for (i in (length(time_l) - 2 - 1)) {
j <- j + 1
if(all(what[1:i] > .05) == FALSE){
print(j)
break
}
}
j <- 1
for (i in (length(time_l) - 2 - 1)) {
j <- j + 1
if(all(what[1:i] > .05) == FALSE){
print(j)
break
}
}
start <- 0
end <- start
for (i in (length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == FALSE){
print(j)
break
}
}
start <- 0
end <- start
for (i in (length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == FALSE){
print(end)
break
}
}
print("hey")
start <- 0
end <- start
for (i in (length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == FALSE){
print("hey")
break
}
}
start <- 0
end <- start
for (i in (length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == FALSE){
print("hey")
break
}
}
x = -30:30
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,.02) + 1
x2 = 0:60
#test <- differences(time = x2, meas = log(z), showplot = TRUE)
test <- differences2(time = x2, meas = z, showplot = TRUE)
ans <- rep(NA, length(meas))
ans[1] <- 0
for (i in 1:(length(log_y)-1)){
slope <- abs(((log_y[i+1] - log_y[i]) / ((times[i+1] - length(times)/2) - meas[i])))
ans[i+1] <- slope
}
return(ans)
# Create function to find derivs? or changes
# First Idea:
# Some weird slope function
deriv <- function(times, meas){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
ans[1] <- 0
for (i in 1:(length(log_y)-1)){
slope <- abs(((log_y[i+1] - log_y[i]) / ((times[i+1] - length(times)/2) - meas[i])))
ans[i+1] <- slope
}
return(ans)
}
# Second Idea:
# Some differences function
differences <- function(times, meas, showplot = FALSE){
ans <- rep(NA, length(meas))
ans[1] <- 0
for (i in 1:(length(meas)-1)){
slope <- meas[i+1] - meas[i]
ans[i+1] <- slope
}
if(showplot == TRUE){
plot(times, ans, type = "l")
}
return(ans)
}
differences2 <- function(times, meas, showplot = FALSE){
ans <- rep(NA, length(meas))
ans[1] <- 0
log_meas <- log(meas)
for (i in 1:(length(log_meas)-1)){
slope <- log_meas[i+1] - log_meas[i]
ans[i+1] <- slope
}
if(showplot == TRUE){
plot(times, ans, type = "l")
}
return(ans)
}
# Third Idea:
# Fit lm between points and find rate of change by subtracting last slope
# by new slope?
deriv2 <- function(time, meas, window = 3){
#First log meas
#Then window n points
#Fit lm model and get slope?
#fit next model and differnce slope?
}
# Create function to find lag time
lagtime <- function(time, meas, differences, showplot = FALSE){
# first find max point in differences
maxgrowth <- which.max(differences)
# need slope
slope1 <- ((meas[maxgrowth + 1] - meas[maxgrowth]) / (time[maxgrowth + 1] - time[maxgrowth]))
slope2 <- ((meas[maxgrowth] - meas[maxgrowth - 1]) / (time[maxgrowth] - time[maxgrowth - 1]))
slope <- (slope1 + slope2) / 2
#fit tangent line to the point
y <- slope * (time - time[maxgrowth]) + meas[maxgrowth]
# y−y1=m(x−x1)
#find where it intersects with min meas value
min_meas <- min(meas)
lag <- ((min_meas - meas[maxgrowth]) / slope) + time[maxgrowth]
if(showplot == TRUE){
plot(time, meas)
lines(time, y)
abline(h = min_meas)
abline(v = lag)
}
#return lagtime
return(lag)
}
# Create function to find stationary time
#Sliding window with threshold and window parameters
stattime <- function(time, meas, lag, threshold = .1, window = 3){
# filter to points right of lagtime
time_l <-  which(time > lag)
meas_l <-  meas[(length(meas) - length(time)):length(meas)]
# log the values after lag
log_meas_l <- log(meas_l)
# instead of finding changes in lag phase
# we can find where the change between points is
# small?
# find new differences of the post lag values
yea <- differences(time, log_meas_l)
# find cutoff value
cutoff <- threshold * yea
#which indicies are below cutoff
indexs <- which(yea < cutoff)
for (i in (length(indexs) - window)) {
current_window <- indexs[i:(i + window)]
if (all(yea[current_window]) == 1) {
return(log_meas_l[i])
}
}
}
stattime <- function(time, meas, lag, threshold = .01, window =3){
# filter to points right of lagtime
time_l <-  which(time > lag)
meas_l <-  meas[(length(meas) - length(time)):length(meas)]
# log the values after lag
log_meas_l <- log(meas_l)
# instead of finding changes in lag phase
# we can find where the change between points is
# small?
# find new differences of the post lag values
yea <- differences(time, log_meas_l)
# find cutoff value
cutoff <- threshold * yea
#which indicies are below cutoff
indexs <- which(yea < cutoff)
# find consecutive window size below cutoff value?
for (i in (length(indexs) - window)) {
current_window <- indexs[i:(i + window)]
if(all(indexs[current_window] > threshold)){
print(time_l[i])
}
}
}
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
# fit exp to points inbetween lag and stat time
x = -30:30
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,.02) + 1
x2 = 0:60
#test <- differences(time = x2, meas = log(z), showplot = TRUE)
test <- differences2(time = x2, meas = z, showplot = TRUE)
lag <- lagtime(time = x2, meas = z, differences = test, showplot = TRUE)
time_l <-  which(time > lag)
#first cuttime to after lag time, and log data
time_l <-  which(time > lag)
lag
time
#first cuttime to after lag time, and log data
time_l <-  which(x2 > lag)
time_l
meas_l <- log(z[(length(z) - length(time_l) + 1):length(z)])
meas_l
length(time_l)
lenght(meas_l)
length(meas_l)
plot(time_l, meas_l)
plot(time_l, meas_l*.1)
"hey"
for (i in 3) {
"hey"
}
for (i in 1:3) {
"hey"
}
print(i)
for (i in 1:3) {
print(i)
}
for (i in (length(time_l) - 2 - 1)) {
start <- i
end <- i + 2
if(all(what[start:end] > .05) == FALSE){
hey <- i + 2
print("hey")
print(time_l[i + 2])
break
}
}
#plot(time_l[-1], diff(meas_l))
what <- diff(meas_l)
for (i in (length(time_l) - 2 - 1)) {
start <- i
end <- i + 2
if(all(what[start:end] > .05) == FALSE){
hey <- i + 2
print("hey")
print(time_l[i + 2])
break
}
}
test <- 1:10
test
test[3:5]
all(test[3:5] > 10)
all(test[3:5] > 2)
all(test[3:5] > 3)
start <- 0
end <- start
for (i in (length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == FALSE){
prin(what[i])
break
}
}
what
start <- 0
end <- start
for (i in (length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == TRUE){
prin(what[i])
break
}
}
start <- 0
end <- start
for (i in (length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == TRUE){
print(what[i])
break
}
}
what
for (i in 3) {
print(i)
}
start <- 0
end <- start
for (i in 1:(length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == TRUE){
print(what[i])
break
}
}
what
start <- 0
end <- start
for (i in 1:(length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == TRUE){
print(what[i])
}
}
te this a bit different
window  <- 2
for (i in 1:(length(time_l) - window - 1)) {
current_window <- what[i:(i + window)]
if (all(current_window > .05)) {
print(what[i])
}
}
start <- 0
end <- start
for (i in 1:(length(time_l) - 2 - 1)) {
start <- start + 1
end <- start + 2
if(all(what[start:end] > .05) == TRUE){
print(what[i])
}
}
x = -30:30
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,.02) + 1
x2 = 0:60
#test <- differences(time = x2, meas = log(z), showplot = TRUE)
test <- differences2(time = x2, meas = z, showplot = TRUE)
lag <- lagtime(time = x2, meas = z, differences = test, showplot = TRUE)
#stat <- stattime(time = x2, meas =z, lag = lag, threshold = .01)
#first cuttime to after lag time, and log data
time_l <-  which(x2 > lag)
meas_l <- log(z[(length(z) - length(time_l) + 1):length(z)])
plot(time_l, meas_l)
test <- c(5,4,3,2,1)
which(test > 4)
which(test > 3)
test[which[test > 3]]
test[which(test > 3)]
plot(time_l, meas_l)
## find lag
x = -30:30
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,.02) + 1
x2 = 0:60
test <- differences2(time = x2, meas = z, showplot = TRUE)
lag <- lagtime(time = x2, meas = z, differences = test, showplot = TRUE)
## cut to after lag time and log meas
time_l <-  x2[which(x2 > lag)]
meas_l <- log(z[(length(z) - length(time_l) + 1):length(z)])
plot(time_l, meas_l)
## multiple differences by threshold
newdiff <- diff(meas_l)
newdiff
meas_l
.229 - .093
threshold <- .01
newdiff <- diff(meas_l) * threshold
lenght(newdiff)
length(newdiff)
plot(1:32, newdiff)
plot(time_l, meas_l)
threshold <- .001
newdiff <- diff(meas_l) * threshold
plot(1:32, newdiff)
.01* 10
threshold <- .01
newdiff <- diff(meas_l) * threshold * 10
plot(1:32, newdiff)
newdiff <- diff(meas_l) * threshold * 20
plot(1:32, newdiff)
plot(time_l, meas_l)
plot(time_l, meas_ln)
time_l <-  x2[which(x2 > lag)]
meas_l <- log(z[(length(z) - length(time_l) + 1):length(z)])
meas_ln <- z[(length(z) - length(time_l) + 1):length(z)]
plot(time_l, meas_l)
plot(time_l, meas_ln)
threshold <- .01
newdiff <- diff(meas_ln) * threshold
plot(1:32, newdiff)
newdiff
newdiff <- diff(meas_l) * threshold
plot(1:32, newdiff)
whatdiff <- diff(meas_l)
whatdiff
newdiff
# which index are below cutoff
which(whatdiff < newdiff)
