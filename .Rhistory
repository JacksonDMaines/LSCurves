git
deriv <- function(x, y, window = 1, blank = 0){
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- y[i])
return(slope)
}
return(slope)
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 100,100)
x2 = 0:20
plot(x2, y)
test <- deriv(x = x2, y = y)
test
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- y[i])
print(slope)
}
return(slope)
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- y[i])
return(slope)
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,100)
x2 = 0:20
z_1 <- c(1.52241035575357, 6.69405158107127, 11.36748041913, 16.5150704688625,
25.197684468949, 37.2729510427523, 49.7489827854298, 63.7812415138795,
81.4451517013702, 100.043167260407)
plot(x2, y)
test <- deriv(x = x2, y = y)
test
test
test[1]
test[2]
test[3]
deriv <- function(x, y, window = 1, blank = 0){
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
return((log_y[i+1] - log_y[i]) / (x[i+1]- y[i]))
}
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,100)
x2 = 0:20
plot(x2, y)
test <- deriv(x = x2, y = y)
test
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (times[i+1]- times[i])
return(slope)
}
}
test <- deriv(time = x2, meas = y)
test
?sum
sum
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (times[i+1]- times[i])
ans[i] <- slope
}
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,100)
x2 = 0:20
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
rep(NA, 3)
test <- rep(NA, 5)
test[3]
test[3] <- 2
test[3]
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (times[i+1]- times[i])
ans[i] <- slope
}
return(ans)
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,100)
x2 = 0:20
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
length(y)
length(test)
plot(x2, test)
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (times[i+1]- meas[i])
ans[i] <- slope
}
return(ans)
}
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- y[i])
return(slope)
}
print(slope)
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- y[i])
print(slope)
}
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
for (i in 1:(length(log_y)-1)){
slope <- ((log_y[i+1] - log_y[i]) / (times[i+1]- times[i]))
ans[i] <- slope
}
return(ans)
}
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- x[i])
print(slope)
}
slope <- (log_y[i+1] - log_y[i]) / (x2[i+1]- x2[i])
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x2[i+1]- x2[i])
print(slope)
}
slope <- (log_y[i+1] - log_y[i]) / (x2[i+1]- x[i])
print(slope)
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x2[i+1]- x[i])
print(slope)
}
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- x[i])
print(slope)
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,100)
x2 = 0:20
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- x[i])
print(slope)
}
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- y[i])
print(slope)
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- y[i])
print(slope)
}
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
for (i in 1:(length(log_y)-1)){
slope <- ((log_y[i+1] - log_y[i]) / (times[i+1]- meas[i]))
ans[i] <- slope
}
return(ans)
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,100)
x2 = 0:20
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
# first we need to log y
log_y <- log(y)
test
slope <- ((log_y[i+1] - log_y[i]) / ((times[i+1] - length(times)/2) - meas[i]))
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
for (i in 1:(length(log_y)-1)){
slope <- ((log_y[i+1] - log_y[i]) / ((times[i+1] - length(times)/2) - meas[i]))
ans[i] <- slope
}
return(ans)
}
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
for (i in 1:(length(log_y)-1)){
slope <- ((log_y[i+1] - log_y[i]) / ((times[i+1] - length(times)/2) - meas[i]))
ans[i] <- slope
}
return(ans)
}
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,100)
x2 = 0:20
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
# first we need to log y
log_y <- log(y)
derivatives <- c()
#now you need to start window lm
for (i in 1:(length(log_y)-1)){
slope <- (log_y[i+1] - log_y[i]) / (x[i+1]- y[i])
print(slope)
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,1)
x2 = 0:20
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
deriv <- function(times, meas, window = 1, blank = 0){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
for (i in 1:(length(log_y)-1)){
slope <- abs(((log_y[i+1] - log_y[i]) / ((times[i+1] - length(times)/2) - meas[i])))
ans[i] <- slope
}
return(ans)
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,1)
x2 = 0:20
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
# first we need to log y
log_y <- log(y)
1/0
# First Idea:
# Some weird slope function
deriv <- function(times, meas){
# first we need to log y
log_y <- log(meas)
ans <- rep(NA, length(meas))
ans[1] <- 0
for (i in 1:(length(log_y)-1)){
slope <- abs(((log_y[i+1] - log_y[i]) / ((times[i+1] - length(times)/2) - meas[i])))
ans[i+1] <- slope
}
return(ans)
}
x = -10:10
y = exp(x) / (1 + exp(x))
z = y + rnorm(length(y), 0,1)
x2 = 0:20
plot(x2, y)
test <- deriv(time = x2, meas = y)
test
plot(x2, test)
test
